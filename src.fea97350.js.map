{"version":3,"sources":["index.js"],"names":["CountdownTimer","selector","targetDate","getTime","clearInterval","intervalId","days","textContent","countTime","hours","mins","secs","timer","document","querySelector","start","setInterval","updateTimer","timeNow","Date","now","time","Math","floor","toString","padStart"],"mappings":";;;AA6DA,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,KAAA,EAAA,OAAA,eAAA,EAAA,EAAA,CAAA,MAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,GAAA,EAAA,EA7DA,QAAA,oBAEMA,IAAAA,EAAAA,WACkC,SAAA,EAAA,GAAA,IAAA,EAAA,KAAxBC,EAAAA,EAAAA,SAAUC,EAAAA,EAAAA,WAAc,EAAA,KAAA,GA6CxB,EAAA,KAAA,cAAA,WACR,EAAKC,WAAa,EACpBC,cAAc,EAAKC,aAIrB,EAAKC,KAAKC,YAAc,EAAKC,YAAYF,KACzC,EAAKG,MAAMF,YAAc,EAAKC,YAAYC,MAC1C,EAAKC,KAAKH,YAAc,EAAKC,YAAYE,KACzC,EAAKC,KAAKJ,YAAc,EAAKC,YAAYG,QArDpCT,KAAAA,WAAaA,EAAWC,UACxBS,KAAAA,MAAQC,SAASC,cAAcb,GAC/BK,KAAAA,KAAO,KAAKM,MAAME,cAAc,uBAChCL,KAAAA,MAAQ,KAAKG,MAAME,cAAc,wBACjCJ,KAAAA,KAAO,KAAKE,MAAME,cAAc,uBAChCH,KAAAA,KAAO,KAAKC,MAAME,cAAc,uBAChCC,KAAAA,QAmDT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAhDE,MAAA,WACM,GAAA,KAAKZ,WAAa,EAKpB,OAJKG,KAAAA,KAAKC,YAAc,EACnBE,KAAAA,MAAMF,YAAc,EACpBG,KAAAA,KAAKH,YAAc,OACnBI,KAAAA,KAAKJ,YAAc,GAGnBF,KAAAA,WAAaW,YAAY,KAAKC,YAAa,OAwCtD,CAAA,IAAA,UApCE,MAAA,WACQC,IAAAA,EAAUC,KAAKC,MAEdC,OADM,KAAKnB,WAAagB,IAkCnC,CAAA,IAAA,YA9BE,MAAA,WACQG,IAAAA,EAAO,KAAKlB,UACZG,EAAOgB,KAAKC,MAAMF,EAAQ,OAC7BG,WACAC,SAAS,EAAG,KAUR,MAAA,CAAEhB,MATKa,KAAKC,MAAOF,EAAQ,MAAyB,MACxDG,WACAC,SAAS,EAAG,KAOCnB,KAAAA,EAAMI,KANTY,KAAKC,MAAOF,EAAQ,KAAoB,KAClDG,WACAC,SAAS,EAAG,KAIad,KAHfW,KAAKC,MAAOF,EAAQ,IAAc,KAC5CG,WACAC,SAAS,EAAG,UAiBnB,EA3DMzB,GA2DAY,EAAQ,IAAIZ,EAAe,CAC/BC,SAAU,WACVC,WAAY,IAAIiB,KAAK","file":"src.fea97350.js","sourceRoot":"../src","sourcesContent":["import './sass/main.scss';\n\nclass CountdownTimer {\n  constructor({ selector, targetDate }) {\n    this.targetDate = targetDate.getTime();\n    this.timer = document.querySelector(selector);\n    this.days = this.timer.querySelector('[data-value=\"days\"]');\n    this.hours = this.timer.querySelector('[data-value=\"hours\"]');\n    this.mins = this.timer.querySelector('[data-value=\"mins\"]');\n    this.secs = this.timer.querySelector('[data-value=\"secs\"]');\n    this.start();\n  }\n\n  start() {\n    if (this.getTime() <= 0) {\n      this.days.textContent = 0;\n      this.hours.textContent = 0;\n      this.mins.textContent = 0;\n      this.secs.textContent = 0;\n      return;\n    } else {\n      this.intervalId = setInterval(this.updateTimer, 1000);\n    }\n  }\n\n  getTime() {\n    const timeNow = Date.now();\n    const time = this.targetDate - timeNow;\n    return time;\n  }\n\n  countTime() {\n    const time = this.getTime();\n    const days = Math.floor(time / (1000 * 60 * 60 * 24))\n      .toString()\n      .padStart(2, '0');\n    const hours = Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60))\n      .toString()\n      .padStart(2, '0');\n    const mins = Math.floor((time % (1000 * 60 * 60)) / (1000 * 60))\n      .toString()\n      .padStart(2, '0');\n    const secs = Math.floor((time % (1000 * 60)) / 1000)\n      .toString()\n      .padStart(2, '0');\n    return { hours, days, mins, secs };\n  }\n\n  updateTimer = () => {\n    if (this.getTime() <= 0) {\n      clearInterval(this.intervalId);\n      return;\n    }\n\n    this.days.textContent = this.countTime().days;\n    this.hours.textContent = this.countTime().hours;\n    this.mins.textContent = this.countTime().mins;\n    this.secs.textContent = this.countTime().secs;\n  };\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Dec 31, 2021'),\n});"]}